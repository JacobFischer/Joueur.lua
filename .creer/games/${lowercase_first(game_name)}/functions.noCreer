<%
if not 'lua' in shared:
    shared['lua'] = {}

    def lua_default(type_obj, default=None):
        base_type = type_obj['name']
        if default == None:
            if base_type == "string":
                return '""'
            elif base_type == "list" or base_type == "dictionary":
                return 'Table()'
            elif base_type == "int" or base_type == "float":
                return '0'
            elif base_type == "boolean":
                return 'false'
            elif base_type == 'null':
                return "nil"
            else:
                return "nil"
        else:
            return lua_value(type_obj, default)
    shared['lua']['default'] = lua_default

    def lua_value(type_obj, default):
        base_type = type_obj['name']
        if base_type == "string":
            return '"' + default + '"'
        elif base_type == "boolean":
            return str(default).lower()
        elif base_type == "int" or base_type == "float":
            return str(default)
        else:
            return "nil"
    shared['lua']['value'] = lua_value

    def lua_type(type_obj):
        base_type = type_obj['name']
        if base_type == "list":
            return "{" + lua_type(type_obj['valueType']) + ", ...}"
        elif base_type == "dictionary":
            return "{[" + lua_type(type_obj['keyType']) + "]=" + lua_type(type_obj['valueType']) + ", ...}"
        elif base_type == "int" or base_type == "float":
            return "number"
        elif base_type == "boolean":
            return "bool"
        elif base_type == "null":
            return "nil"
        else:
            return base_type
    shared['lua']['type'] = lua_type


    def lua_cast(type_obj):
        base_type = type_obj['name']
        if base_type == "string":
            return "tostring"
        elif base_type == "int" or base_type == "float":
            return "tonumber"
        elif base_type == "boolean":
            return "not not " # lol
        else:
            return ""
    shared['lua']['cast'] = lua_cast

    def lua_format_description(description):
        return description \
            .replace("null", "nil") \
            .replace("Null", "nil") \
            .replace("dictionary", "table") \
            .replace("list", "array-like table")
    shared['lua']['format_description'] = lua_format_description

%>